@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims

@*
Previously that User class extends to IdentityUser class, the injection was
   @inject SignInManager<IdentityUser> SignInManager
   @inject UserManager<IdentityUser> UserManager
*@
@inject SignInManager<User> SignInManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        @*Previously <p class="nav-link">@UserManager.GetUserName(User)</p>*@
        <a class="nav-link" asp-controller="Home" asp-action="Index" title="Welcome">Hello <b>@(User.FindFirst(ClaimTypes.GivenName).Value)</b></a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button id="logout" type="submit" class="nav-link btn btn-link">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link" id="register" asp-area="Identity" asp-controller="Account" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link" id="login" asp-area="Identity" asp-controller="Account" asp-action="Login">Login</a>
    </li>
}
</ul>
